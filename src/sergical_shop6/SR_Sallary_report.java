
package sergical_shop6;
  
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

 
public class SR_Sallary_report extends javax.swing.JFrame {
   Connection_Class con;
      Connection_Class con1;
 double count=0,tcount=0;
    public SR_Sallary_report() {
        initComponents();
           AutoCompleteDecorator.decorate(Sr_nname); 
        con=new Connection_Class();
         con=new Connection_Class();
        showw();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        sr_cost = new javax.swing.JLabel();
        sr_profit = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        sr_profit1 = new javax.swing.JLabel();
        sr_cost1 = new javax.swing.JLabel();
        total1 = new javax.swing.JLabel();
        desktopPane = new javax.swing.JDesktopPane();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Sr_nname = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(61, 42, 127));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SR Salery Report");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(200, 0, 340, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Id", "Date", "Name", "Position", "Mobile Number", "Event", "Ammount"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(360, 110, 980, 390);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "SR", "SR Salrey" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(1210, 10, 140, 30);

        sr_cost.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sr_cost.setForeground(new java.awt.Color(255, 255, 255));
        sr_cost.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel1.add(sr_cost);
        sr_cost.setBounds(1060, 540, 280, 30);

        sr_profit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sr_profit.setForeground(new java.awt.Color(255, 255, 255));
        sr_profit.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel1.add(sr_profit);
        sr_profit.setBounds(1060, 500, 280, 30);

        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel1.add(total);
        total.setBounds(1060, 580, 280, 30);

        sr_profit1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sr_profit1.setForeground(new java.awt.Color(255, 255, 255));
        sr_profit1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sr_profit1.setText("Total Sales Profit :");
        jPanel1.add(sr_profit1);
        sr_profit1.setBounds(850, 500, 210, 30);

        sr_cost1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sr_cost1.setForeground(new java.awt.Color(255, 255, 255));
        sr_cost1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sr_cost1.setText("Total Cost            :");
        jPanel1.add(sr_cost1);
        sr_cost1.setBounds(850, 540, 210, 30);

        total1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total1.setForeground(new java.awt.Color(255, 255, 255));
        total1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        total1.setText("Total Profit           :");
        jPanel1.add(total1);
        total1.setBounds(850, 580, 210, 30);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        desktopPane.add(jLabel12);
        jLabel12.setBounds(0, 0, 90, 110);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("*Search by SR Name");
        desktopPane.add(jLabel6);
        jLabel6.setBounds(20, 140, 170, 30);

        Sr_nname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        Sr_nname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sr_nnameActionPerformed(evt);
            }
        });
        desktopPane.add(Sr_nname);
        Sr_nname.setBounds(20, 170, 310, 30);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        desktopPane.add(jDateChooser1);
        jDateChooser1.setBounds(20, 230, 310, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Date  : ");
        desktopPane.add(jLabel9);
        jLabel9.setBounds(20, 200, 170, 30);

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        desktopPane.add(jDateChooser2);
        jDateChooser2.setBounds(20, 290, 310, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Date  : ");
        desktopPane.add(jLabel10);
        jLabel10.setBounds(20, 260, 170, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        desktopPane.add(jButton2);
        jButton2.setBounds(90, 360, 120, 40);

        jPanel1.add(desktopPane);
        desktopPane.setBounds(0, 0, 1370, 720);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1350, 730);

        setSize(new java.awt.Dimension(1359, 730));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
void show_oneid(){
    try{
       double t=0,bb=0;
    DefaultTableModel dt=(DefaultTableModel) jTable1.getModel();
               dt.setRowCount(0);
            con.contest();
            String select="SELECT `id`,`name`,`mobile`,`position`,`salery`,`date` FROM `sergical_shop`.`sr_salery` WHERE `id`='"+Sr_nname.getSelectedItem()+"'";
            con.st = con.ct.prepareCall(select);
            con.rs = con.st.executeQuery(select);
            while(con.rs.next()){
                dt.addRow(new Object[]{con.rs.getString(1),con.rs.getDate(6),con.rs.getString(2),con.rs.getString(4),con.rs.getString(3),Double.parseDouble(con.rs.getString(5))});
           bb=Double.parseDouble(con.rs.getString(5));
                
                t=bb+t;
            }
            sr_cost.setText("Total : "+t);
        } catch (SQLException ex) {
            Logger.getLogger(Supplier_Table.class.getName()).log(Level.SEVERE, null, ex);
        }

}


void showw(){
       try {
           con.contest();
              String select="SELECT `so_name` FROM `sergical_shop`.`sales_officer`";
           
        
           con.st = con.ct.prepareCall(select);
           con.rs = con.st.executeQuery(select);
           while(con.rs.next()){
             Sr_nname.addItem(""+con.rs.getString(1));
               
           }
       } catch (SQLException ex) {
           Logger.getLogger(SR_Sallary_report.class.getName()).log(Level.SEVERE, null, ex);
       }
}
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedIndex()==1){
            Sales_Officer s=new Sales_Officer();
            s.setVisible(true);
            dispose();
        }if(jComboBox1.getSelectedIndex()==2){
            SR_Salarry s=new SR_Salarry();
            s.setVisible(true);
            dispose();

        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void Sr_nnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sr_nnameActionPerformed
         DefaultTableModel dt=(DefaultTableModel) jTable1.getModel();
               dt.setRowCount(0);
               sr_cost.setText("0");
               sr_profit.setText("0");
               total.setText("0");
          try {
              
            
              
              if(Sr_nname.getSelectedIndex()>0){
              String sr_salse="SELECT  `s_date`,`SR`,SUM((`total`-(`s_quantity`*`pur_price`)))AS profit FROM `sergical_shop`.`sales_table` WHERE `SR` ='"+Sr_nname.getSelectedItem()+"'GROUP BY `SR`";
              con.contest();
               double p=0;
              con.st = con.ct.prepareCall(sr_salse);
              con.rs = con.st.executeQuery(sr_salse);
              if(con.rs.next()){
                  try{  p=Double.parseDouble(con.rs.getString(3));
                  p=Math.round(p*100.0)/100.0;
                  sr_profit.setText(""+p);  }
                  catch(Exception e){
                  p=Math.round(p*100.0)/100.0;
                  
                  // dt.addRow(new Object[]{con.rs.getDate(1),con.rs.getString(2),p});
                 
                      
              
                  sr_profit.setText(""+p);
                  }
              }
            
                
               con.contest();
    double t=0;
            String select="SELECT `id`,`name`,`mobile`,`position`,`salery`,`date`,`status` FROM `sergical_shop`.`sr_salery` WHERE `name`='"+Sr_nname.getSelectedItem()+"'";
            con.st = con.ct.prepareCall(select);
            con.rs = con.st.executeQuery(select);
            while(con.rs.next()){
             dt.addRow(new Object[]{con.rs.getString(1),con.rs.getDate(6),con.rs.getString(2),con.rs.getString(4),con.rs.getString(3),con.rs.getString(7),Double.parseDouble(con.rs.getString(5))});
              
                  double bb=Double.parseDouble(con.rs.getString(5));
              t=bb+t;
            
            }
            sr_cost.setText(""+t);
              
              
           p=p-t;
           total.setText(""+p);
              
              
              
              
          }
              
              
              
              
              
              
              
              
          } catch (SQLException ex) {
              Logger.getLogger(SR_Sallary_report.class.getName()).log(Level.SEVERE, null, ex);
          }
      
      
     
    }//GEN-LAST:event_Sr_nnameActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange

               if(Sr_nname.getSelectedIndex()>=0 && !((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().isEmpty() ){
        sr_cost.setText("0");
               sr_profit.setText("0");
               total.setText("0");
        DefaultTableModel dt=(DefaultTableModel) jTable1.getModel();
               dt.setRowCount(0);
          try {
              
              SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
String date1 = sd.format(jDateChooser1.getDate());
              
              if(Sr_nname.getSelectedIndex()>0){
              String sr_salse="SELECT  `s_date`,`SR`,SUM((`total`-(`s_quantity`*`pur_price`)))AS profit FROM `sergical_shop`.`sales_table` WHERE `SR` ='"+Sr_nname.getSelectedItem()+"' AND `s_date`='"+date1+"' GROUP BY `SR`";
              con.contest();
               double p=0;
              con.st = con.ct.prepareCall(sr_salse);
              con.rs = con.st.executeQuery(sr_salse);
              if(con.rs.next()){
                  try{  p=Double.parseDouble(con.rs.getString(3));
                  p=Math.round(p*100.0)/100.0;
                  sr_profit.setText(""+p);  }
                  catch(Exception e){
                  p=Math.round(p*100.0)/100.0;
                  
                  // dt.addRow(new Object[]{con.rs.getDate(1),con.rs.getString(2),p});
                  
                  sr_profit.setText(""+p);
                  }
              }
            
                
               con.contest();
    double t=0;
            String select="SELECT `id`,`name`,`mobile`,`position`,`salery`,`date` FROM `sergical_shop`.`sr_salery` WHERE `name`='"+Sr_nname.getSelectedItem()+"' AND `date`='"+date1+"'";
            con.st = con.ct.prepareCall(select);
            con.rs = con.st.executeQuery(select);
            while(con.rs.next()){
             dt.addRow(new Object[]{con.rs.getString(1),con.rs.getDate(6),con.rs.getString(2),con.rs.getString(4),con.rs.getString(3),Double.parseDouble(con.rs.getString(5))});
               double bb=Double.parseDouble(con.rs.getString(5));
              t=bb+t;
            
            }
            p=Double.parseDouble(sr_profit.getText());
            sr_cost.setText(""+t); 
            
           p=p-t;
            
           total.setText(""+p);
              
              
              
              
          }
              
              
              
              
              
              
              
              
          } catch (SQLException ex) {
              Logger.getLogger(SR_Sallary_report.class.getName()).log(Level.SEVERE, null, ex);
          }
      
      
      
      }
        
        
        
        
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
    
        
          if(Sr_nname.getSelectedIndex()>=0 && !((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().isEmpty() && !((JTextField) jDateChooser2.getDateEditor().getUiComponent()).getText().isEmpty() ){
       
        DefaultTableModel dt=(DefaultTableModel) jTable1.getModel();
               dt.setRowCount(0);
                 sr_cost.setText("0");
               sr_profit.setText("0");
               total.setText("0");
          try {
              
              SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
String date1 = sd.format(jDateChooser1.getDate());
        
String date2 = sd.format(jDateChooser2.getDate());   
              if(Sr_nname.getSelectedIndex()>0){
              String sr_salse="SELECT  `s_date`,`SR`,SUM((`total`-(`s_quantity`*`pur_price`)))AS profit FROM `sergical_shop`.`sales_table` WHERE `SR` ='"+Sr_nname.getSelectedItem()+"' AND `s_date`>='"+date1+"' AND `s_date`<='"+date2+"' GROUP BY `SR`";
              con.contest();
               double p=0;
              con.st = con.ct.prepareCall(sr_salse);
              con.rs = con.st.executeQuery(sr_salse);
              if(con.rs.next()){
                  try{  p=Double.parseDouble(con.rs.getString(3));
                  p=Math.round(p*100.0)/100.0;
                  sr_profit.setText(""+p);  }
                  catch(Exception e){
                  p=Math.round(p*100.0)/100.0;
                   sr_profit.setText(""+p);
                  }
              }
            
                
               con.contest();
    double t=0;
            String select="SELECT `id`,`name`,`mobile`,`position`,`salery`,`date` FROM `sergical_shop`.`sr_salery` WHERE `name`='"+Sr_nname.getSelectedItem()+"' AND `date`>='"+date1+"' AND `date`<='"+date2+"'";
            con.st = con.ct.prepareCall(select);
            con.rs = con.st.executeQuery(select);
            while(con.rs.next()){
             dt.addRow(new Object[]{con.rs.getString(1),con.rs.getDate(6),con.rs.getString(2),con.rs.getString(4),con.rs.getString(3),Double.parseDouble(con.rs.getString(5))});
               double bb=Double.parseDouble(con.rs.getString(5));
              t=bb+t;
            
            }
            p=Double.parseDouble(sr_profit.getText());
            sr_cost.setText(""+t); 
            
           p=p-t; 
           total.setText(""+p);
              
              
              
              
          }
              
              
              
              
              
              
              
              
          } catch (SQLException ex) {
              Logger.getLogger(SR_Sallary_report.class.getName()).log(Level.SEVERE, null, ex);
          }
      
      
      
      }
        
        
        
        
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        NewMDIApplication n=new NewMDIApplication();
        n.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SR_Sallary_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SR_Sallary_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SR_Sallary_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SR_Sallary_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SR_Sallary_report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Sr_nname;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel sr_cost;
    private javax.swing.JLabel sr_cost1;
    private javax.swing.JLabel sr_profit;
    private javax.swing.JLabel sr_profit1;
    private javax.swing.JLabel total;
    private javax.swing.JLabel total1;
    // End of variables declaration//GEN-END:variables
}
